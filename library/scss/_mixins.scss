/******************************************************************
Site Name:
Author: Efeqdev, LLC

Stylesheet: Mixins & Constants Stylesheet

This is where you can take advantage of Sass' great features:
Mixins & Constants. I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.

A WORD OF WARNING: It's very easy to overdo it here. Be careful and
remember less is more.

******************************************************************/

/*********************
CLEARFIXIN'
*********************/

// Contain floats: nicolasgallagher.com/micro-clearfix-hack/
.clearfix {
  zoom: 1;
	&:before, &:after { content: ""; display: table; }
	&:after { clear: both; }
}

/*********************
TOOLS
*********************/

// BORDER-BOX ALL THE THINGS! (http://paulirish.com/2012/box-sizing-border-box-ftw/)
* {
	-webkit-box-sizing: border-box;
	-moz-box-sizing:    border-box;
	box-sizing:         border-box;
}

// http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
.image-replacement {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}

// retina.scss
// Defaults to png but can be overwritten to jpg or gif
//$image name is equal to the image name with out it's extention - 'example.png' would be defined as 'example'
// A helper mixin for applying high-resolution background images (http://www.retinajs.com)

// this will create the background-image and background-size lines in the final
// .css, remember to specify the background-position and background-repeat
// after this @mixin
 
@mixin at2x($image_name, $w: auto, $h: auto, $extention: '.png') {
  background-image: url($image_name + $extention);
  $x2img : $image_name + '@2x' + $extention;
  @media all and (-webkit-min-device-pixel-ratio : 1.5) {
    background-image: url($x2img); // this will render the background-image
    background-size: $w $h; // this will render the background-size 
  }  
}

/*********************
COLORS
Need help w/ choosing your colors? Try this site out:
http://0to255.com/
*********************/
$red:				rgba(205,0,37,0.8);
$gold:				rgba(255,148,25,0.8);

$alert-yellow:      #ebe16f;
$alert-red:         #fbe3e4;
$alert-green:       #e6efc2;
$alert-blue:        #d5edf8;

$black:             #000;
$white:             #fff;

$green:				#9eca8a;
$grey:				#808285;
$pink:				#E64097;
$brown:				#54301A;

$bones-pink:        #f01d4f;
$bones-blue:        #1990db;

$link-color:        #666666;
$link-hover:        $red;

/*
Here's a great tutorial on how to
use color variables properly:
http://sachagreif.com/sass-color-variables/
*/


/*********************
TYPOGRAPHY
*********************/

$sans-serif:        "Avenir-Light", "Helvetica Neue", Helvetica, Arial, sans-serif;
$serif:             "Georgia", Cambria, Times New Roman, Times, serif;


/* 	To embed your own fonts, use this syntax
	and place your fonts inside the
	library/fonts folder. For more information
	on embedding fonts, go to:
	http://www.fontsquirrel.com/
	Be sure to remove the comment brackets.
*/

	@font-face {
    	font-family: 'Avenir-Light';
    	src: url('../fonts/Avenir-Light-Folder/Avenir.eot');
    	src: url('../fonts/Avenir-Light-Folder/Avenir.eot?#iefix') format('embedded-opentype'),
             url('../fonts/Avenir-Light-Folder/Avenir.woff') format('woff'),
             url('../fonts/Avenir-Light-Folder/Avenir-Light.ttf') format('truetype'),
             url('../fonts/Avenir-Light-Folder/Avenir-Light.otf') format('opentype'),
             url('../fonts/Avenir-Light-Folder/Avenir.svg#Avenir-Light') format('svg');
    	font-weight: normal;
    	font-style: normal;
	}

/*
use the best ampersand
http://simplebits.com/notebook/2008/08/14/ampersands-2/
*/
span.amp {
  font-family: Baskerville,'Goudy Old Style',Palatino,'Book Antiqua',serif !important;
  font-style: italic;
}

// text alignment
.text-left   { text-align: left; }
.text-center { text-align: center; }
.text-right  { text-align: right; }


// alerts and notices
%alert {
	margin: 10px;
	padding: 5px 18px;
	border: 1px solid;
}

.alert-help {
	@extend %alert;
	border-color: darken($alert-yellow, 5%);
	background: $alert-yellow;
}

.alert-info {
	@extend %alert;
	border-color: darken($alert-blue, 5%);
	background: $alert-blue;
}

.alert-error {
	@extend %alert;
	border-color: darken($alert-red, 5%);
	background: $alert-red;
}

.alert-success {
	@extend %alert;
	border-color: darken($alert-green, 5%);
	background: $alert-green;
}

/*********************
TRANISTION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
	// defining prefixes so we can use them in mixins below
	$prefixes:      ("-webkit", "-ms", "-o",  "");
  @each $prefix in $prefixes {
    #{$prefix}-transition: $transition;
  }

  transition: $transition;
}

/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdue it.
*********************/

/* @include bottom-gradient($white,#EDEDEE); */
@mixin bottom-gradient($from: $white, $to: #EDEDEE) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

/* @include top-gradient(#EDEDEE,$white); */
@mixin top-gradient($from: #EDEDEE, $to: $white) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}


/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing:    $type;
	-ms-box-sizing:     $type;
	box-sizing:         $type;
}
